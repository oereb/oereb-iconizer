plugins {
    id 'java'
    id 'application'
    id 'com.jfrog.bintray' version '1.8.4'  
    //id 'com.github.johnrengelman.shadow' version '6.0.0'      
}

apply plugin: 'maven-publish'
apply from: 'gradle/versioning.gradle'

repositories {
    jcenter()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.postgresql:postgresql:42.2.5'
    implementation 'info.picocli:picocli:4.2.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.2.0'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    
    testImplementation 'org.testcontainers:testcontainers:1.15.1'
    testImplementation 'org.testcontainers:postgresql:1.15.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


group = 'ch.so.agi.oereb'

jar {
    baseName 'oereb-iconizer'
}

distZip {
    archiveName 'oereb-iconizer' + '-'  + project.version.toString() + '.zip'
}

distTar {
    archiveName 'oereb-iconizer' + '-'  + project.version.toString() + '.tar'
}

application {
    mainClassName = 'ch.so.agi.oereb.Main'
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
    failFast = true    
}

run {
    //args = ["--help"]
    args = ["--downloadDir", "/Users/stefan/tmp/", "--sldUrl", "http://localhost:8083/wms/oereb-symbols?&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetStyles&LAYERS=ch.SO.NutzungsplanungGrundnutzung&STYLE=default&SLD_VERSION=1.1.0", "--legendGraphicUrl", "http://localhost:8083/wms/oereb-symbols?&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetLegendGraphic&LAYER=ch.SO.NutzungsplanungGrundnutzung&FORMAT=image/png&STYLE=default&SLD_VERSION=1.1.0&RULELABEL=false&LAYERTITLE=false&HEIGHT=35&WIDTH=70&SYMBOLHEIGHT=3&SYMBOLWIDTH=6&DPI=300"]
    // --downloadDir /Users/stefan/tmp/ --sldUrl "http://localhost:8083/wms/oereb-symbols?&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetStyles&LAYERS=ch.SO.NutzungsplanungGrundnutzung&STYLE=default&SLD_VERSION=1.1.0" --legendGraphicUrl "http://localhost:8083/wms/oereb-symbols?&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetLegendGraphic&LAYER=ch.SO.NutzungsplanungGrundnutzung&FORMAT=image/png&STYLE=default&SLD_VERSION=1.1.0&RULELABEL=false&LAYERTITLE=false&HEIGHT=35&WIDTH=70&SYMBOLHEIGHT=3&SYMBOLWIDTH=6&DPI=300"
}

// Bintray / jcenter
task sourcesJar(type: Jar, dependsOn: classes) {
    baseName 'oereb-iconizer'
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName 'oereb-iconizer'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def githubRepoUrl = "https://github.com/oereb/oereb2-iconizer"
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://github.com/oereb/oereb2-iconizer/blob/master/LICENSE"
        }
    }
    developers {
        developer {
            id "edigonzales"
            name "Stefan Ziegler"
            email "stefan.ziegler@bd.so.ch"
        }
    }

    scm {
        url githubRepoUrl
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            artifact distZip
            
            groupId project.group
            artifactId 'oereb-iconizer'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Creates icons for OEREB-Rahmenmodell and saves them in a database table as bytea.')
                root.appendNode('name', 'oereb-iconizer')
                root.appendNode('url', githubRepoUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.env.bintrayUser
    key = System.env.bintrayKey
    publications = ['mavenPublication']
    publish = true
    
    pkg {
        repo = 'oereb-iconizer'
        name = 'oereb-iconizer'
        userOrg = 'sogis'
        licenses = ['MIT']
        labels = ['oereb', 'plr', 'java']        
        vcsUrl = githubRepoUrl
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
}

/*
task fatjar(type: Jar) {
    archiveFileName='oereb-iconizer' + '-'  + project.version.toString() + '-all.jar'
    manifest {
        attributes(
            "Main-Class": "ch.so.agi.oereb.Main"
        )
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}*/